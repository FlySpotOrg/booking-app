name: Smoke Test Run

on:
  push:
  workflow_dispatch:

jobs:
  dispatch-and-wait:
    name: Trigger Smoke test run and get report
    runs-on: ubuntu-latest

    steps:
      - name: Pause for 30 seconds if another run is in progress
        if: github.event_name == 'push'
        run: |
          RUNNING_WORKFLOWS=$(gh api repos/${{ github.repository }}/actions/runs --jq '.workflow_runs[] | select(.status=="in_progress" and .name=="${{ github.workflow }}") | .id')
          if [ -n "$RUNNING_WORKFLOWS" ]; then
            echo "Another run is in progress. Waiting 30 seconds..."
            sleep 30
          fi

      - name: Dispatch & wait for smoke suite
        id: dispatch_and_wait
        uses: convictional/trigger-workflow-and-wait@v1.6.5
        with:
          owner: FlySpotOrg
          repo: playwrightDemoProject
          github_token: ${{ secrets.REPO_A_PAT }}
          workflow_file_name: playwright-test-run.yml
          ref: main
          client_payload: >-
            {"test_scope":"smoke"}
          wait_interval: 15
          propagate_failure: true
          comment_downstream_url: ${{ github.event.pull_request.comments_url }}

      - name: Publish report link to action summary
        id: report_summary
        run: |
          RUN_ID=${{ steps.dispatch_and_wait.outputs.workflow_id }}
          CONCLUSION=${{ steps.dispatch_and_wait.outputs.conclusion }}
          if [ "$CONCLUSION" = "success" ]; then
            SYMBOL="✅"
          else
            SYMBOL="❌"
          fi
          echo "### ${SYMBOL} Allure Report: https://flyspotorg.github.io/playwrightDemoProject/smoke/${RUN_ID}/" >> $GITHUB_STEP_SUMMARY
          echo "symbol=${SYMBOL}" >> $GITHUB_OUTPUT
          echo "run_id=${RUN_ID}" >> $GITHUB_OUTPUT

      - name: Publish report link to commit
        if: github.event_name == 'push'
        run: |
          echo "{\"body\":\"### ${{ steps.report_summary.outputs.symbol }} Allure Report: https://flyspotorg.github.io/playwrightDemoProject/smoke/${{ steps.report_summary.outputs.run_id }}/\"}" > comment.json
          curl -X POST \
            -H "Authorization: token ${{ secrets.REPO_A_PAT }}" \
            -H "Content-Type: application/json" \
            "https://api.github.com/repos/${{ github.repository }}/commits/${{ github.sha }}/comments" \
            -d @comment.json